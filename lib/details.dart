import 'package:flutter/material.dart';import 'package:photo_view/photo_view_gallery.dart';import 'package:randomphotos/main.dart';import 'package:url_launcher/url_launcher.dart';class DetailsPage extends StatefulWidget {DetailsPage({Key key, this.items, this.i}) : super(key: key);final int i;final List<Item> items;@override _DetailsPageState createState() => _DetailsPageState();static open(BuildContext context, List<Item> items, int i) {Navigator.push(context,MaterialPageRoute(builder: (context) => DetailsPage(items: items, i: i),));}}class _DetailsPageState extends State<DetailsPage> {Item item;@override void initState() {super.initState();item = widget.items.elementAt(widget.i);}void _pageChanged(int idx) {setState(() {item = widget.items.elementAt(idx);});}List<PhotoViewGalleryPageOptions> _getPages() {return widget.items.map((item) {return PhotoViewGalleryPageOptions(imageProvider: NetworkImage(item.imgUrl),heroTag: 'pic_${item.webUrl}');}).toList(growable: false);}@override Widget build(BuildContext context) {return Scaffold(body: Container(constraints: BoxConstraints.expand(height: MediaQuery.of(context).size.height,),child: Stack(alignment: Alignment.bottomLeft,children: [PhotoViewGallery(pageController: PageController(initialPage: widget.i),onPageChanged: _pageChanged,pageOptions: _getPages(),),Container(width: MediaQuery.of(context).size.width,color: Colors.black54,child: Padding(padding: EdgeInsets.all(8),child: Row(mainAxisSize: MainAxisSize.max,mainAxisAlignment: MainAxisAlignment.end,children: <Widget>[Expanded(flex: 1,child: Column(crossAxisAlignment: CrossAxisAlignment.start,mainAxisSize: MainAxisSize.min,children: [Text(item.title,maxLines: 3,textAlign: TextAlign.start,overflow: TextOverflow.ellipsis,style: TextStyle(inherit: false,color: Colors.white,fontSize: 16),),Text(item.author,maxLines: 1,textAlign: TextAlign.start,overflow: TextOverflow.ellipsis,style: TextStyle(inherit: false,color: Colors.white70,fontSize: 14),)],),),RaisedButton(child: Text('Open'),onPressed: () async {if (await canLaunch(item.webUrl)) {await launch(item.webUrl);} else {throw 'Could not launch ${item.webUrl}';}})],),),),],),),);}}